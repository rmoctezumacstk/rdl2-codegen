package com.softtek.generator.afore.citibanamex

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess2
import com.softtek.rdl2.Module
import com.softtek.rdl2.Entity

class CrudComponentConsultasGenerator {
	
	def doGenerate(com.softtek.rdl2.System s, IFileSystemAccess2 fsa) {
		
		fsa.generateFile("banamex/src/main/resources/querys/consultas.properties", genJavaConsultas(s, fsa))	

	}
	
	def CharSequence genJavaConsultas(com.softtek.rdl2.System s, IFileSystemAccess2 fsa) '''
	#catalogos 
	archivo.proceso.catalogo.procesos = SELECT DISTINCT PROCESS_ID, PROCESS_ID DESCRIPCION FROM OWNAFOCG.DA_PROCESS_DEFN WHERE PROCESS_ID NOT LIKE '%ACK%' ORDER BY 1
	proceso.entity.lista.fileId = SELECT FILE_ID FROM DA_FILE_DEFN
	archivo.sistema.contenedor = SELECT FILE_ID FROM OWNAFOCG.DA_FILE_DEFN WHERE SYSTEM_NAME=:idSistema AND BOX_NAME=:contenedor
	
	#consultas
	archivo.proceso.subquery.archivo = SELECT DES.PROCESS_ID ID_PROCESO, DFD.FILE_ID IDENTIFICADOR_ARCHIVO, DFA.FILE_NAME ARCHIVO_RELACIONADO, \
		DFD.FILE_TYPE TIPO_ARCHIVO, DES.STATUS ESTADO_EJECUCION, TO_CHAR(DFA.PROCESS_DATE, 'DD/MM/YYYY') FECHA_LLEGADA, \
	    TO_CHAR(DFD.CREATE_DTTM, 'DD/MM/YYYY') FECHA_RECEPCION, TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO, \
		TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, TO_CHAR(DES.END_DTTM, 'DD/MM/YYYY') FECHA_FIN, \
		TO_CHAR(DES.END_DTTM, 'HH24:MI:SS') HORA_FIN, DFD.FILE_SOURCE ENTIDAD_ORIGEN, DFSD.NODE_DEST ENTIDAD_DESTINO, \
		NVL(TR.TOTAL_RECHAZOS, 0) TOTAL_RECHAZOS, NVL(TI.TOTAL_INCIDENCIAS, 0) TOTAL_INCIDENCIAS, DFD.ACK_TYPE ACUSE, \
		NVL(DFD.SYSTEM_NAME, 'N/A') SYSTEM_NAME FROM OWNAFOCG.DA_FILE_DEFN DFD INNER JOIN OWNAFOCG.DA_FILE_ARRIVED DFA ON DFD.SYSTEM_NAME=DFA.SYSTEM_NAME \
		AND DFD.FILE_ID=DFA.FILE_ID INNER JOIN OWNAFOCG.DA_EXEC_STATUS DES  ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_STATUS DFSS ON DFSS.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSS.PROCESS_ID=DES.PROCESS_ID AND DFSS.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_DEFN DFSD ON DFSD.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSD.PROCESS_ID=DES.PROCESS_ID AND DFSD.FILE_NBR=DFSS.FILE_NBR \
		LEFT JOIN (SELECT FILE_ID, BATCH_ID, SYSTEM_NAME, COUNT(*) TOTAL_RECHAZOS FROM OWNAFOCG.DA_FILE_ARRIVED \
		WHERE UPPER(COMMENTS) LIKE '%REJECTED%' GROUP BY FILE_ID, BATCH_ID, SYSTEM_NAME) TR ON TR.BATCH_ID=DFA.BATCH_ID AND TR.SYSTEM_NAME=DFA.SYSTEM_NAME \
		AND TR.FILE_ID=DFA.FILE_ID LEFT JOIN (SELECT SYSTEM_NAME, BATCH_ID, PROCESS_ID, COUNT(*) TOTAL_INCIDENCIAS FROM OWNAFOCG.DA_EXEC_STATUS WHERE \
		STATUS='FAILED' GROUP BY SYSTEM_NAME, BATCH_ID, PROCESS_ID) TI ON TI.SYSTEM_NAME=DES.SYSTEM_NAME AND TI.BATCH_ID=DES.BATCH_ID \
	    AND TI.PROCESS_ID=DES.PROCESS_ID WHERE 1=1 AND DES.PROCESS_ID NOT LIKE '%ACK'
	archivo.proceso.subquery.archivoCount = SELECT COUNT(*) CUENTA FROM (SELECT DES.PROCESS_ID ID_PROCESO, DFD.FILE_ID IDENTIFICADOR_ARCHIVO, DFA.FILE_NAME ARCHIVO_RELACIONADO, \
		DFD.FILE_TYPE TIPO_ARCHIVO, DES.STATUS ESTADO_EJECUCION, TO_CHAR(DFA.PROCESS_DATE, 'DD/MM/YYYY') FECHA_LLEGADA, \
	    TO_CHAR(DFD.CREATE_DTTM, 'DD/MM/YYYY') FECHA_RECEPCION, TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO, \
		TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, TO_CHAR(DES.END_DTTM, 'DD/MM/YYYY') FECHA_FIN, \
		TO_CHAR(DES.END_DTTM, 'HH24:MI:SS') HORA_FIN, DFD.FILE_SOURCE ENTIDAD_ORIGEN, DFSD.NODE_DEST ENTIDAD_DESTINO, \
		NVL(TR.TOTAL_RECHAZOS, 0) TOTAL_RECHAZOS, NVL(TI.TOTAL_INCIDENCIAS, 0) TOTAL_INCIDENCIAS, DFD.ACK_TYPE ACUSE,  \
		NVL(DFD.SYSTEM_NAME, 'N/A') SYSTEM_NAME FROM OWNAFOCG.DA_FILE_DEFN DFD INNER JOIN OWNAFOCG.DA_FILE_ARRIVED DFA ON DFD.SYSTEM_NAME=DFA.SYSTEM_NAME \
		AND DFD.FILE_ID=DFA.FILE_ID INNER JOIN OWNAFOCG.DA_EXEC_STATUS DES  ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_STATUS DFSS ON DFSS.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSS.PROCESS_ID=DES.PROCESS_ID AND DFSS.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_DEFN DFSD ON DFSD.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSD.PROCESS_ID=DES.PROCESS_ID AND DFSD.FILE_NBR=DFSS.FILE_NBR \
		LEFT JOIN (SELECT FILE_ID, BATCH_ID, SYSTEM_NAME, COUNT(*) TOTAL_RECHAZOS FROM OWNAFOCG.DA_FILE_ARRIVED \
		WHERE UPPER(COMMENTS) LIKE '%REJECTED%' GROUP BY FILE_ID, BATCH_ID, SYSTEM_NAME) TR ON TR.BATCH_ID=DFA.BATCH_ID AND TR.SYSTEM_NAME=DFA.SYSTEM_NAME \
		AND TR.FILE_ID=DFA.FILE_ID LEFT JOIN (SELECT SYSTEM_NAME, BATCH_ID, PROCESS_ID, COUNT(*) TOTAL_INCIDENCIAS FROM OWNAFOCG.DA_EXEC_STATUS WHERE \
		STATUS='FAILED' GROUP BY SYSTEM_NAME, BATCH_ID, PROCESS_ID) TI ON TI.SYSTEM_NAME=DES.SYSTEM_NAME AND TI.BATCH_ID=DES.BATCH_ID \
	    AND TI.PROCESS_ID=DES.PROCESS_ID WHERE 1=1 AND DES.PROCESS_ID NOT LIKE '%ACK'
	archivo.proceso.subquery.procesoPorArchivo = SELECT DISTINCT NVL(TR.TOTAL_RECHAZOS, 0) TOTAL_RECHAZOS, NVL(TI.TOTAL_INCIDENCIAS, 0) TOTAL_INCIDENCIAS, \
		TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO,TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, \
		TO_CHAR(DES.END_DTTM, 'DD/MM/YYYY') FECHA_FIN, TO_CHAR(DES.END_DTTM, 'HH24:MI:SS') HORA_FIN, \
		DES.STATUS ESTADO_EJECUCION, \
		NVL(DES.SYSTEM_NAME, 'N/A') SYSTEM_NAME, NVL(DES.BATCH_ID, 0) BATCH_ID, DFA.PROCESS_DATE, DFA.FILE_ID IDENTIFICADOR_ARCHIVO \
		FROM OWNAFOCG.DA_EXEC_STATUS DES INNER JOIN OWNAFOCG.DA_FILE_ARRIVED DFA ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID LEFT \
		JOIN (SELECT FILE_ID, BATCH_ID, SYSTEM_NAME, COUNT(*) TOTAL_RECHAZOS FROM OWNAFOCG.DA_FILE_ARRIVED \
		WHERE  UPPER(COMMENTS) LIKE '%REJECTED%'  GROUP BY FILE_ID, BATCH_ID, SYSTEM_NAME) TR ON TR.BATCH_ID=DFA.BATCH_ID AND \
		TR.SYSTEM_NAME=DFA.SYSTEM_NAME AND TR.FILE_ID=DFA.FILE_ID \
		LEFT JOIN (SELECT SYSTEM_NAME, BATCH_ID, PROCESS_ID, COUNT(*) TOTAL_INCIDENCIAS FROM OWNAFOCG.DA_EXEC_STATUS WHERE STATUS='FAILED' \
		GROUP BY SYSTEM_NAME, BATCH_ID, PROCESS_ID) TI ON TI.SYSTEM_NAME=DES.SYSTEM_NAME AND TI.BATCH_ID=DES.BATCH_ID AND TI.PROCESS_ID=DES.PROCESS_ID WHERE 1=1 \
		AND DES.PROCESS_ID NOT LIKE '%ACK' AND DFA.FILE_ID=:idArchivo AND DFA.SYSTEM_NAME=:idSistema ORDER BY DFA.PROCESS_DATE	 
	archivo.proceso.subquery.procesoCount = SELECT COUNT(*) CUENTA FROM ( SELECT DISTINCT NVL(TR.TOTAL_RECHAZOS, 0) \
		TOTAL_RECHAZOS, NVL(TI.TOTAL_INCIDENCIAS, 0) TOTAL_INCIDENCIAS, \
		TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO,TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, \
		TO_CHAR(DES.END_DTTM, 'DD/MM/YYYY') FECHA_FIN, TO_CHAR(DES.END_DTTM, 'HH24:MI:SS') HORA_FIN, \
		DES.STATUS ESTADO_EJECUCION, \
		NVL(DES.SYSTEM_NAME, 'N/A') SYSTEM_NAME, NVL(DES.BATCH_ID, 0) BATCH_ID, DFA.PROCESS_DATE, DFA.FILE_ID IDENTIFICADOR_ARCHIVO \
		FROM OWNAFOCG.DA_EXEC_STATUS DES INNER JOIN OWNAFOCG.DA_FILE_ARRIVED DFA ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID LEFT \
		JOIN (SELECT FILE_ID, BATCH_ID, SYSTEM_NAME, COUNT(*) TOTAL_RECHAZOS FROM OWNAFOCG.DA_FILE_ARRIVED \
		WHERE  UPPER(COMMENTS) LIKE '%REJECTED%'  GROUP BY FILE_ID, BATCH_ID, SYSTEM_NAME) TR ON TR.BATCH_ID=DFA.BATCH_ID AND \
		TR.SYSTEM_NAME=DFA.SYSTEM_NAME AND TR.FILE_ID=DFA.FILE_ID \
		LEFT JOIN (SELECT SYSTEM_NAME, BATCH_ID, PROCESS_ID, COUNT(*) TOTAL_INCIDENCIAS FROM OWNAFOCG.DA_EXEC_STATUS WHERE STATUS='FAILED' \
		GROUP BY SYSTEM_NAME, BATCH_ID, PROCESS_ID) TI ON TI.SYSTEM_NAME=DES.SYSTEM_NAME AND TI.BATCH_ID=DES.BATCH_ID AND TI.PROCESS_ID=DES.PROCESS_ID WHERE 1=1 \
		AND DES.PROCESS_ID NOT LIKE '%ACK' AND DFA.FILE_ID=:idArchivo AND DFA.SYSTEM_NAME=:idSistema ORDER BY DFA.PROCESS_DATE )
	archivo.proceso.subquery.incidenciaPorArchivo = SELECT DISTINCT DFA.SEQ_NBR SECUENCIA_REGISTRO, DEE.REC_TYPE TIPO_REGISTRO, 'IDENTIFICADOR' IDENTIFICADOR_REGISTRO, \
		DEE.REC_SEQ SECUENCIA_ERROR, DEE.ERROR_CODE CLAVE_ERROR, DEM.DESCR_SHORT DESCRIPCION_ERROR, \
		DEE.ERROR_DATA DATO_ERROR, DFA.PROCESS_DATE FROM  OWNAFOCG.DA_FILE_ARRIVED DFA \
		INNER JOIN OWNAFOCG.DA_EXEC_STATUS DES ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID  INNER JOIN \
		OWNAFOCG.DA_EXEC_ERROR DEE ON DES.SYSTEM_NAME=DEE.SYSTEM_NAME AND DES.BATCH_ID=DEE.BATCH_ID \
	    INNER JOIN OWNAFOCG.DA_ERR_MSG DEM ON DEE.ERROR_CODE=DEM.ERROR_CODE \
		WHERE 1=1 AND DES.PROCESS_ID NOT LIKE '%ACK' AND DEE.SYSTEM_NAME=:idSistema AND DEE.BATCH_ID=:idBatch AND DFA.FILE_ID=:idArchivo ORDER BY DFA.PROCESS_DATE
	archivo.proceso.subquery.incidenciaCont = SELECT COUNT(*) CUENTA FROM  ( SELECT DISTINCT DFA.SEQ_NBR SECUENCIA_REGISTRO, \
		DEE.REC_TYPE TIPO_REGISTRO, 'IDENTIFICADOR' IDENTIFICADOR_REGISTRO, \
		DEE.REC_SEQ SECUENCIA_ERROR, DEE.ERROR_CODE CLAVE_ERROR, DEM.DESCR_SHORT DESCRIPCION_ERROR, \
		DEE.ERROR_DATA DATO_ERROR, DFA.PROCESS_DATE FROM  OWNAFOCG.DA_FILE_ARRIVED DFA \
		INNER JOIN OWNAFOCG.DA_EXEC_STATUS DES ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID  INNER JOIN \
		OWNAFOCG.DA_EXEC_ERROR DEE ON DES.SYSTEM_NAME=DEE.SYSTEM_NAME AND DES.BATCH_ID=DEE.BATCH_ID \
	    INNER JOIN OWNAFOCG.DA_ERR_MSG DEM ON DEE.ERROR_CODE=DEM.ERROR_CODE \
		WHERE 1=1 AND DES.PROCESS_ID NOT LIKE '%ACK' AND DEE.SYSTEM_NAME=:idSistema AND DEE.BATCH_ID=:idBatch AND DFA.FILE_ID=:idArchivo ORDER BY DFA.PROCESS_DATE )
	archivo.proceso.subquery.consultaArchivoCont = SELECT COUNT(*) CUENTA FROM ( SELECT DFD.FILE_ID IDENTIFICADOR_ARCHIVO, DFA.FILE_NAME \
		ARCHIVO_RELACIONADO, DES.PROCESS_ID ID_PROCESO,  TO_CHAR(DFA.PROCESS_DATE, 'DD/MM/YYYY') FECHA_LLEGADA,  TO_CHAR(DFD.CREATE_DTTM, 'DD/MM/YYYY') FECHA_RECEPCION, \
		TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO, TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, \
		DFD.FILE_TYPE TIPO_ARCHIVO, DFD.STATUS ESTADO_ARCHIVO, DFSS.STATUS STATUS_REENVIO, DFSS.FILE_NAME_DEST NOMBRE_FISICO, \
		DFSD.NODE_DEST ENTIDAD_DESTINO, \
		NVL(DES.SYSTEM_NAME, 'N/A') SYSTEM_NAME, NVL(DES.BATCH_ID, 0) BATCH_ID FROM OWNAFOCG.DA_FILE_DEFN DFD INNER JOIN \
		OWNAFOCG.DA_FILE_ARRIVED DFA ON DFD.SYSTEM_NAME=DFA.SYSTEM_NAME AND DFD.FILE_ID=DFA.FILE_ID INNER JOIN \
		OWNAFOCG.DA_EXEC_STATUS DES ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_STATUS DFSS ON DFSS.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSS.PROCESS_ID=DES.PROCESS_ID AND DFSS.BATCH_ID=DES.BATCH_ID LEFT \
		JOIN OWNAFOCG.DA_FILE_SEND_DEFN DFSD ON DFSD.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSD.PROCESS_ID=DES.PROCESS_ID AND DFSD.FILE_NBR=DFSS.FILE_NBR \
		WHERE 1=1 AND UPPER(DFSS.STATUS) NOT IN  ('PENDING', 'SUBMIT_SUCCESS')  AND DES.PROCESS_ID NOT LIKE '%ACK' 
	archivo.proceso.subquery.consultaArchivo = SELECT DFD.FILE_ID IDENTIFICADOR_ARCHIVO, DFA.FILE_NAME ARCHIVO_RELACIONADO, DES.PROCESS_ID ID_PROCESO, \
	    TO_CHAR(DFA.PROCESS_DATE, 'DD/MM/YYYY') FECHA_LLEGADA, TO_CHAR(DFD.CREATE_DTTM, 'DD/MM/YYYY') FECHA_RECEPCION, \
		TO_CHAR(DES.START_DTTM, 'DD/MM/YYYY') FECHA_INICIO, TO_CHAR(DES.START_DTTM, 'HH24:MI:SS') HORA_INICIO, \
		DFD.FILE_TYPE TIPO_ARCHIVO, DFD.STATUS ESTADO_ARCHIVO, DFSS.STATUS STATUS_REENVIO, DFSS.FILE_NAME_DEST NOMBRE_FISICO, \
		DFSD.NODE_DEST ENTIDAD_DESTINO, \
		NVL(DES.SYSTEM_NAME, 'N/A') SYSTEM_NAME, NVL(DES.BATCH_ID, 0) BATCH_ID FROM OWNAFOCG.DA_FILE_DEFN DFD INNER JOIN \
		OWNAFOCG.DA_FILE_ARRIVED DFA ON DFD.SYSTEM_NAME=DFA.SYSTEM_NAME AND DFD.FILE_ID=DFA.FILE_ID INNER JOIN \
		OWNAFOCG.DA_EXEC_STATUS DES ON DFA.SYSTEM_NAME=DES.SYSTEM_NAME AND DFA.BATCH_ID=DES.BATCH_ID \
		LEFT JOIN OWNAFOCG.DA_FILE_SEND_STATUS DFSS ON DFSS.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSS.PROCESS_ID=DES.PROCESS_ID AND DFSS.BATCH_ID=DES.BATCH_ID LEFT \
		JOIN OWNAFOCG.DA_FILE_SEND_DEFN DFSD ON DFSD.SYSTEM_NAME=DFD.SYSTEM_NAME AND DFSD.PROCESS_ID=DES.PROCESS_ID AND DFSD.FILE_NBR=DFSS.FILE_NBR \
		WHERE 1=1 AND UPPER(DFSS.STATUS) NOT IN  ('PENDING', 'SUBMIT_SUCCESS')  AND DES.PROCESS_ID NOT LIKE '%ACK' 
		
	archivo.actualizacion.info = SELECT SYSTEM_NAME,FILE_ID,BOX_NAME,DESCRIPTION,FILE_TYPE,SEQ_FLAG,FILE_SOURCE,FILE_PATTERN,FILE_MIN_SIZE,MAX_WAIT_FOR_FILE, \
	STATUS,ACK_TYPE,DIST_LIST, (SELECT NODE_DEST FROM DA_FILE_SEND_DEFN WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID=:idProceso) AS NODE_DEST \
	FROM OWNAFOCG.DA_FILE_DEFN WHERE SYSTEM_NAME=:idSistema AND BOX_NAME=:contenedor AND FILE_ID=:idArchivo 
	archivo.actualizacion.procesosRelacionados = SELECT PROCESS_ID FROM OWNAFOCG.DA_PROCESS_FILE WHERE SYSTEM_NAME=:idSistema AND FILE_ID=:idArchivo  AND PROCESS_ID<>:idArchivo||'_ACK'
	archivo.actualizacion.procesosNoRelacionados = SELECT PROCESS_ID FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME=:idSistema AND BOX_NAME=:contenedor AND \
	PROCESS_ID NOT IN(SELECT PROCESS_ID FROM OWNAFOCG.DA_PROCESS_FILE WHERE FILE_ID=:idArchivo OR FILE_ID=:idArchivo||'_ACK') AND UPPER(PROCESS_ID) NOT LIKE '%_ACK'
	
	archivo.delete.procesosRelacionados = DELETE FROM DA_PROCESS_FILE WHERE SYSTEM_NAME=:idSistema AND FILE_ID=:idArchivo AND PROCESS_ID=:idProceso
		
	#actualizaciones
	archivo.proceso.update.reenvioArchivo = UPDATE OWNAFOCG.DA_FILE_SEND_STATUS DFSS SET DFSS.STATUS = 'PENDING', DFSS.START_DTTM=SYSDATE \
		WHERE DFSS.SYSTEM_NAME = :idSistema AND DFSS.BATCH_ID=:idBatch  AND DFSS.PROCESS_ID NOT LIKE '%_ACK'
		
	archivo.proceso.delete.reenvioArchivo = DELETE FROM OWNAFOCG.DA_FILE_SEND_STATUS WHERE SYSTEM_NAME = :idSistema AND batch_id = :idBatch \
		AND PROCESS_ID LIKE '%_ACK'
	
		#contenedor
	
	contenedor.catalogo.sistemas = SELECT ROWNUM, SYSTEM_NAME SISTEMA FROM OWNAFOCG.DA_SYSTEM_DEFN
	
	contenedor.entity.contenedores = SELECT ROWNUM, BOX_NAME CONTENEDOR FROM OWNAFOCG.DA_BOX_DEFN WHERE SYSTEM_NAME =:idSistema
	
	contenedor.entity.contenedoresCount = SELECT COUNT (SYSTEM_NAME) FROM OWNAFOCG.DA_BOX_DEFN WHERE BOX_NAME=:contenedor
	
	contenedor.entity.contenedoresDifMinsCount = SELECT COUNT (SYSTEM_NAME) FROM OWNAFOCG.DA_BOX_DEFN WHERE \
	BOX_NAME <> :contenedor AND ABS (TRUNC((TO_DATE (START_TIMES,  'HH24:MI') - TO_DATE (:horaInicio,  'HH24:MI')) * (60 * 24))) < 3  
	
	contenedor.entity.celendarDefn.info = SELECT SYSTEM_NAME, CAL_NAME FROM OWNAFOCG.DA_CALENDAR_DEFN WHERE SYSTEM_NAME =:idSistema
	
	contenedor.entity.insert = INSERT INTO OWNAFOCG.DA_BOX_DEFN (SYSTEM_NAME, BOX_NAME, FREQUENCY,  \
	   DESCRIPTION, PIVOT_NAME, PDATE_FORMAT10, EXTERNAL_CONDITION, CONDITION, DATE_CONDITIONS, DAYS_OF_WEEK, \
	   RUN_CALENDAR, EXCLUDE_CALENDAR, START_TIMES, TERM_RUN_TIME, RUN_TIMEZONE, \
	   ALARM_IF_FAIL, CREATE_DTTM) VALUES (:idSistema, :contenedor, :frecuencia, :descripcion, :plan, \
	   :variableFecha, :condicionExterna, :condicion, :condicionFecha, :diasSemana, :calendarioEjecucion, \
	   :calendarioExclusion, :horaInicio, :horaFin, :zonaHoraria, :alarmaFallo, SYSDATE)
	
	contenedor.entity.contenedor.info = SELECT CON.SYSTEM_NAME SISTEMA, CON.BOX_NAME CONTENEDOR, CON.FREQUENCY FRECUENCIA , CON.DESCRIPTION DESCRIPCION, \
	   CON.PIVOT_NAME PLAN, CON.PDATE_FORMAT10 VARIABLE_FECHA, CON.EXTERNAL_CONDITION CONDICION_EXTERNA, CON.CONDITION CONDICION, \
	   CON.DATE_CONDITIONS CONDICION_FECHA, CON.DAYS_OF_WEEK DIAS_SEMANA, CON.RUN_CALENDAR CALENDARIO_EJECUCION,  \
	   CON.EXCLUDE_CALENDAR CALENDARIO_EXCLUSION, CON.START_TIMES HORA_INICIO, CON.TERM_RUN_TIME HORA_FIN, CON.RUN_TIMEZONE ZONA_HORARIA, \
	   CON.ALARM_IF_FAIL ALARMA_FALLO FROM OWNAFOCG.DA_BOX_DEFN CON WHERE CON.SYSTEM_NAME=:idSistema \
	   AND CON.BOX_NAME=:contenedor
	
	contenedor.entity.update = UPDATE OWNAFOCG.DA_BOX_DEFN SET FREQUENCY=:frecuencia,  DESCRIPTION=:descripcion, \
	   PIVOT_NAME=:plan, PDATE_FORMAT10=:variableFecha, EXTERNAL_CONDITION=:condicionExterna, CONDITION=:condicion, DATE_CONDITIONS=:condicionFecha, \
	   DAYS_OF_WEEK=:diasSemana, RUN_CALENDAR=:calendarioEjecucion, EXCLUDE_CALENDAR=:calendarioExclusion, \
	   START_TIMES=:horaInicio, TERM_RUN_TIME=:horaFin, RUN_TIMEZONE=:zonaHoraria, \
	   ALARM_IF_FAIL=:alarmaFallo, UPDATE_DTTM = SYSDATE WHERE SYSTEM_NAME =:idSistema AND BOX_NAME =:contenedor
	   
	contenedor.entity.condicion.info = SELECT BOX_NAME FROM  OWNAFOCG.DA_BOX_DEFN WHERE SYSTEM_NAME =:idSistema AND FREQUENCY <> 'CONTINUA'   
	
	#procesos  
	 
	 proceso.entity.procesosCount = SELECT COUNT(PROCESS_ID) PROCESO FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME =:idSistema AND PROCESS_ID =:proceso 
	 
	 proceso.entity.insert.proceso = INSERT INTO DA_PROCESS_DEFN (SYSTEM_NAME, PROCESS_ID, BOX_NAME, DESCRIPTION, \
	 RES_FROM_FAILURE, CLEAN_DATA_ON_REPROC, STATUS, CREATE_DTTM) VALUES (:sistema, :proceso, :contenedor, :descripcion, :reprocesarDesdePuntoFalla, \
	 :reprocesarConLimpiezaDatos, :estatus, SYSDATE)
	 
	 proceso.entity.procesos = SELECT PROCESS_ID FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME =:idSistema AND BOX_NAME =:contenedor AND UPPER(PROCESS_ID) NOT LIKE '%_ACK'
	 
	 proceso.entity.procesosInfo = SELECT * FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME =:idSistema AND PROCESS_ID =:proceso
	 
	 proceso.entity.update.proceso = UPDATE OWNAFOCG.DA_PROCESS_DEFN SET BOX_NAME =:contenedor, \
	 DESCRIPTION =:descripcion, RES_FROM_FAILURE=:reprocesarDesdePuntoFalla, CLEAN_DATA_ON_REPROC =:reprocesarConLimpiezaDatos, \
	 STATUS =:estatus, UPDATE_DTTM = SYSDATE WHERE SYSTEM_NAME =:sistema AND PROCESS_ID =:proceso
	 
	 proceso.entity.lista.procesos.envi = SELECT DISTINCT PROCESS_ID FROM DA_FILE_SEND_DEFN WHERE SYSTEM_NAME = :idSistema AND UPPER(PROCESS_ID) NOT LIKE '%ACK'
	 
	 proceso.entity.lista.procesos.dependencias = SELECT PROCESS_ID FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME = :idSistema AND UPPER(PROCESS_ID) NOT LIKE '%_ACK'
	 
	 proceso.entity.insert.dependencia = INSERT INTO OWNAFOCG.DA_PROCESS_DEP (SYSTEM_NAME, PROCESS_ID, EXTERNAL_CONDITION, DEP_PROCESS_ID, STATUS, CREATE_DTTM) \
	 VALUES (:idSistema, :idProceso, :condicionExterna, :idProcesoDepenedencia, 'ACTIVE', SYSDATE )
	 
	 proceso.entity.delete.dependencia = DELETE FROM OWNAFOCG.DA_PROCESS_DEP WHERE SYSTEM_NAME =:idSistema AND PROCESS_ID =:idProceso AND DEP_PROCESS_ID IN
	 
	 proceso.entity.dependencias = SELECT DEP_PROCESS_ID FROM OWNAFOCG.DA_PROCESS_DEP WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID=:proceso
	 
	 #Archivos
	 archivo.entity.archivosCount = SELECT COUNT (FILE_ID) FROM  OWNAFOCG.DA_FILE_DEFN WHERE SYSTEM_NAME =:idSistema AND FILE_ID =:idArchivo
	 
	 archivo.entity.insert = INSERT INTO OWNAFOCG.DA_FILE_DEFN (SYSTEM_NAME, FILE_ID, BOX_NAME, DESCRIPTION, FILE_TYPE, FILE_SOURCE, SEQ_FLAG, FILE_PATTERN, \
	 FILE_MIN_SIZE, MAX_WAIT_FOR_FILE, STATUS, ACK_TYPE, DIST_LIST, CREATE_DTTM, UPDATE_DTTM) VALUES (:sistema, :idArchivo, :contenedor, \
	:descripcion, :tipoArchivo, :origen, :segFlag, :nombreFisico, :tamanioMinino, NULL, :estatus, :tipoAcuse, :destinatarioAcuse, SYSDATE, NULL)
	 
	 #Envio Archivos
	 proceso.entity.EnvArchivoCount = SELECT COUNT (FILE_NBR) FROM OWNAFOCG.DA_FILE_SEND_DEFN WHERE SYSTEM_NAME =:idSistema and \
	 PROCESS_ID =:proceso and  FILE_NBR =:fileNbr
	 
	envArchivo.entity.insert.envArchivo = INSERT INTO OWNAFOCG.DA_FILE_SEND_DEFN (SYSTEM_NAME, PROCESS_ID, FILE_NBR, PATH_ORIG, \
	FILE_PATTERN_ORIG,  FILE_PATTERN_DEST, DATA_TYPE, NODE_DEST, LRECL, RECFM, NODE_ID,  FILE_STATUS, ACK_TYPE, DIST_LIST, CREATE_DTTM) \
	VALUES (:sistema, :proceso, :fileNbr, :pathOrig, :filePatternOrig, :filePatternDest, :dataType, :nodeDest, :lRcl, :recFm, :nodeId, \
	:fileStatus, :ackType, :distList, SYSDATE)
	
	envArchivo.entity.update.envArchivo = UPDATE OWNAFOCG.DA_FILE_SEND_DEFN SET PATH_ORIG =:pathOrig, FILE_PATTERN_ORIG =:filePatternOrig,  \
	FILE_PATTERN_DEST =:filePatternDest, DATA_TYPE =:dataType, NODE_DEST =:nodeDest, LRECL=:lRcl, RECFM=:recFm, \
	NODE_ID=:nodeId, FILE_STATUS =:fileStatus, ACK_TYPE =:ackType, DIST_LIST =:distList, UPDATE_DTTM=SYSDATE WHERE SYSTEM_NAME=:sistema \
	AND PROCESS_ID=:proceso AND FILE_NBR=:fileNbr
	
	envArchivo.entity.info.envArchivo = SELECT FD.SYSTEM_NAME, FD.PROCESS_ID, PD.BOX_NAME CONTENEDOR, \
	(SELECT NODE_DEST FROM OWNAFOCG.DA_FILE_SEND_DEFN WHERE SYSTEM_NAME = FD.SYSTEM_NAME \
	AND PROCESS_ID = FD.PROCESS_ID||'_ACK' AND FILE_NBR =:fileNbr) AS NODE_ACK,\
	FD.FILE_NBR, FD.PATH_ORIG, FD.FILE_PATTERN_ORIG, FD.FILE_PATTERN_DEST, FD.DATA_TYPE, FD.NODE_DEST, \
	FD.LRECL, FD.RECFM, FD.NODE_ID, FD.FILE_STATUS, FD.ACK_TYPE, FD.DIST_LIST, FD.CREATE_DTTM, FD.UPDATE_DTTM \
	FROM OWNAFOCG.DA_FILE_SEND_DEFN FD, OWNAFOCG.DA_PROCESS_DEFN PD WHERE FD.SYSTEM_NAME =:idSistema AND FD.PROCESS_ID=:proceso AND FD.FILE_NBR =:fileNbr \
	AND FD.SYSTEM_NAME = PD.SYSTEM_NAME AND FD.PROCESS_ID = PD.PROCESS_ID
	
	archivo.entity.update = UPDATE OWNAFOCG.DA_FILE_DEFN SET DESCRIPTION=:descripcion, FILE_TYPE=:tipoArchivo, \
	FILE_SOURCE=:origen, SEQ_FLAG=:segFlag, FILE_PATTERN=:nombreFisico, FILE_MIN_SIZE=:tamanioMinino, MAX_WAIT_FOR_FILE=NULL, STATUS=:estatus, ACK_TYPE=:tipoAcuse, \
	DIST_LIST=:destinatarioAcuse, UPDATE_DTTM=SYSDATE WHERE SYSTEM_NAME=:sistema AND FILE_ID=:idArchivo AND BOX_NAME=:contenedor
	
	envArchivo.entity.consecutivos = SELECT FILE_NBR FROM OWNAFOCG.DA_FILE_SEND_DEFN WHERE SYSTEM_NAME =:idSistema AND PROCESS_ID =:proceso
	
	archivo.entity.insert.dep = INSERT INTO OWNAFOCG.DA_PROCESS_FILE (SYSTEM_NAME, FILE_ID, PROCESS_ID, STATUS, CREATE_DTTM, UPDATE_DTTM) VALUES (:idSistema, :fileId, :idProcess, :status, SYSDATE, NULL)
	 
	archivo.entity.acuseProcesoCount = SELECT COUNT (PROCESS_ID) FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID =:proceso
	
	archivo.entity.acuseArchivoCount = SELECT COUNT (FILE_ID) FROM OWNAFOCG.DA_FILE_DEFN WHERE SYSTEM_NAME=:idSistema AND FILE_ID =:fileId
	
	archivo.entity.acuseProcesoBorra = DELETE FROM OWNAFOCG.DA_PROCESS_DEFN WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID =:proceso
	
	archivo.entity.acuseArchivoBorra = DELETE FROM OWNAFOCG.DA_FILE_DEFN WHERE SYSTEM_NAME=:idSistema AND FILE_ID =:fileId
	
	#Proceso Archivo
	
	procesoArchivo.entity.insert = INSERT INTO OWNAFOCG.DA_PROCESS_FILE (SYSTEM_NAME, FILE_ID, PROCESS_ID, STATUS, CREATE_DTTM) \
	VALUES (:idSistema, :idArchivo, :proceso, :estatus, SYSDATE)	
	
	archivo.entity.acuseProcesoArchivoBorra = DELETE FROM OWNAFOCG.DA_PROCESS_FILE WHERE SYSTEM_NAME=:idSistema AND FILE_ID=:fileId AND PROCESS_ID=:proceso  
	
	archivo.entity.acuseEnvioArchivoBorra = DELETE FROM OWNAFOCG.DA_FILE_SEND_DEFN WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID=:proceso AND FILE_NBR=1
	
	archivo.entity.acuseEnvioArchivoBorraPorNBR = DELETE FROM OWNAFOCG.DA_FILE_SEND_DEFN WHERE SYSTEM_NAME=:idSistema AND PROCESS_ID=:proceso AND FILE_NBR=:nbr
	
	#Accesos
	accesos.entity.uris = SELECT ROM.CVE_OPCION_MENU AS id, URLO.DESCRIPCION AS descripcion, URLO.URI AS url FROM OWNAFOCG.CGC_USUARIO_ROL UR, OWNAFOCG.CGC_USUARIO US, OWNAFOCG.CGC_ROL RL, OWNAFOCG.CGC_ROL_OPCION_MENU ROM, OWNAFOCG.CGC_OPCION_MENU URLO \
	WHERE UR.CVE_USUARIO =UPPER(:soeid) AND UR.CVE_USUARIO = US.CVE_USUARIO AND US.BLN_ACTIVO = 1 AND  UR.CVE_ROL = RL.CVE_ROL AND RL.BLN_ACTIVO = 1 AND UR.CVE_ROL = ROM.CVE_ROL AND ROM.CVE_OPCION_MENU=URLO.CVE_OPCION_MENU
	
	accesos.entity.uri.valida = SELECT COUNT (ROM.CVE_OPCION_MENU) FROM OWNAFOCG.CGC_USUARIO_ROL UR, OWNAFOCG.CGC_USUARIO US, OWNAFOCG.CGC_ROL RL, OWNAFOCG.CGC_ROL_OPCION_MENU ROM, OWNAFOCG.CGC_OPCION_MENU URLO \
	WHERE UR.CVE_USUARIO =UPPER(:soeid) AND UR.CVE_USUARIO = US.CVE_USUARIO AND US.BLN_ACTIVO = 1 \
	AND  UR.CVE_ROL = RL.CVE_ROL AND RL.BLN_ACTIVO = 1 \
	AND UR.CVE_ROL = ROM.CVE_ROL AND ROM.CVE_OPCION_MENU=URLO.CVE_OPCION_MENU \
	AND URLO.URI =:cveOpcion
	
	#Semaforo
	semaforo.consulta.id = select ID_SEMAFORO,NOMBRE,DESCRIPCION,DESEMPENIO,CVE_EDO_INDICADOR,CVE_TIPO_MEDIDA from CGT_SEMAFORO where ID_SEMAFORO=:id
	semaforo.valor.consulta.id = select ID_VALOR_SEMAFORO,CVE_COLOR_SEMAFORO,VALOR_MAXIMO,VALOR_MINIMO from CGT_VALOR_SEMAFORO where ID_SEMAFORO=?
	semaforo.consulta.todos = select ID_SEMAFORO,NOMBRE,DESCRIPCION,DESEMPENIO,CVE_EDO_INDICADOR,CVE_TIPO_MEDIDA from CGT_SEMAFORO where 1=1
	semaforo.consulta.registros = select count(1) from CGT_SEMAFORO where 1=1
	semaforo.insertar = insert into CGT_SEMAFORO (NOMBRE,DESCRIPCION,DESEMPENIO,CVE_EDO_INDICADOR,CVE_TIPO_MEDIDA) values(?,?,?,?,?)
	semaforo.valor.insert = insert into CGT_VALOR_SEMAFORO (ID_SEMAFORO,CVE_COLOR_SEMAFORO,VALOR_MAXIMO,VALOR_MINIMO) values(?,?,?,?)
	semaforo.eiminar = delete from CGT_SEMAFORO where ID_SEMAFORO=?
	semaforo.valor.eliminar = delete from CGT_VALOR_SEMAFORO where ID_SEMAFORO= ?
	semaforo.actualizar = update CGT_SEMAFORO set NOMBRE=?, DESCRIPCION=?, DESEMPENIO=?, CVE_EDO_INDICADOR=?, CVE_TIPO_MEDIDA=? where ID_SEMAFORO=?
	semaforo.valor.actualizar = update CGT_VALOR_SEMAFORO set VALOR_MAXIMO=?,VALOR_MINIMO=? where ID_SEMAFORO=? and CVE_COLOR_SEMAFORO=?
	
	#Catalogos semaforo
	
	color.semaforo.catalogo = select CVE_COLOR_SEMAFORO,DESCRIPCION from CGG_COLOR_SEMAFORO
	tipo.medida.catalogo = select CVE_TIPO_MEDIDA,DESCRIPCION from CGG_TIPO_MEDIDA
	estado.indicador.catalogo = select CVE_EDO_INDICADOR,DESCRIPCION from CGG_EDO_INDICADOR
	
	«FOR m : s.modules_ref»
		«FOR e : m.module_ref.elements.filter(Entity)»
			«e.genEntity(m.module_ref)»
		«ENDFOR»
	«ENDFOR»	
	'''
	
	def dispatch genEntity(Entity e, Module m) '''
	#«e.name.toLowerCase.toFirstUpper»
	«e.name.toLowerCase».consulta.id = select ID_«e.name.toUpperCase»,«FOR f : e.entity_fields SEPARATOR ','»«f.name.toUpperCase»«ENDFOR» from CGT_«e.name.toUpperCase» where ID_«e.name.toUpperCase»=:id
	«e.name.toLowerCase».consulta.todos = select ID_«e.name.toUpperCase», «FOR f : e.entity_fields SEPARATOR ','»«f.name.toUpperCase»«ENDFOR» from CGT_«e.name.toUpperCase» where 1=1
	«e.name.toLowerCase».consulta.registros = select count(1) from CGT_«e.name.toUpperCase» where 1=1
	«e.name.toLowerCase».insertar = insert into CGT_«e.name.toUpperCase» («FOR f : e.entity_fields SEPARATOR ','»«f.name.toUpperCase»«ENDFOR») values(?,?,?,?,?)
	«e.name.toLowerCase».eiminar = delete from CGT_«e.name.toUpperCase» where ID_«e.name.toUpperCase»=?
	«e.name.toLowerCase».actualizar = update CGT_«e.name.toUpperCase» «FOR f : e.entity_fields SEPARATOR ','»set «f.name.toUpperCase»= ? «ENDFOR» where ID_«e.name.toUpperCase»=?
	
	'''
	
}